/*
希尔排序通过将比较的全部元素分为几个区域来提升插入排序的性能。这样可以让一个元素可以一次性地朝最终位置前进一大步。然后算法再取越来越小的步长进行排序，算法的最后一步就是普通的插入排序，但是到了这步，需排序的数据几乎是已排好的了（此时插入排序较快）。
*/

def shell_sort(nums):
    if not nums or len(nums) <=1:
        return nums
    gap = len(nums) // 2
    while gap > 0:
        for i in range(gap, len(nums)):
            tmp = nums[i]
            j = i
            while j >= gap and nums[j-gap] > tmp:
                nums[j] = nums[j-gap]
                j = j-gap
            nums[j] = tmp
        gap = gap // 2
    return nums
